{
  // 清单文件的版本，这个必须写，而且必须是 2
  "manifest_version": 3,
  // 插件的名称
  "name": "react-crx-v3",
  // 插件的版本
  "version": "1.0.0",
  // 插件描述
  "description": "react 开发 chrome 插件 v3 版本 demos",
  // 图标，一般偷懒全部用一个尺寸的也没问题
  "icons": {
    "16": "/images/icon.png", // 扩展程序页面上的图标
    "32": "/images/icon.png", // Windows 计算机通常需要此大小。提供此选项可防止尺寸失真缩小 48x48 选项。
    "48": "/images/icon.png", // 显示在扩展程序管理页面上
    "128": "/images/icon.png" // 在安装和 Chrome Webstore 中显示
  },
  // 会一直常驻的后台 JS 或后台页面
  "background": {
    "service_worker": "static/js/background.js"
  },
  // 需要直接注入页面的 JS 数组可配置多个规则
  "content_scripts": [
    {
      // "<all_urls>" 表示匹配所有地址
      "matches": ["<all_urls>"],
      // 多个JS按顺序注入
      "js": ["static/js/content.js"],
      // JS的注入可以随便一点，但是CSS的注意就要千万小心了，因为一不小心就可能影响全局样式
      "css": ["static/css/content.css"],
      // 代码注入的时间，可选值："document_start", "document_end", or "document_idle"，最后一个表示页面空闲时，默认document_idle
      "run_at": "document_start"
    }
  ],
  // 权限申请
  "permissions": [
    "declarativeContent", // 修改和阻断网络请求
    "contextMenus", // 右键菜单
    "tabs", // 标签
    "notifications", // 通知
    "webRequest", // web 请求
    "webRequestBlocking",
    "storage", // 插件本地存储
    "http://*/*", // 可以通过executeScript或者insertCSS访问的网站
    "https://*/*" // 可以通过executeScript或者insertCSS访问的网站
  ],
  // 插件涉及的外部请求地址
  "host_permissions": [],
  // 普通页面能够直接访问的插件资源列表，如果不设置是无法直接访问的
  // "web_accessible_resources": ["js/*", "js/**/*"],
  "web_accessible_resources": [
    {
      "resources": ["insert.js"],
      "matches": ["<all_urls>"]
    }
  ],
  "action": {
    "default_icon": {
      "16": "/images/icon.png", // 扩展程序页面上的图标
      "32": "/images/icon.png", // Windows 计算机通常需要此大小。提供此选项可防止尺寸失真缩小 48x48 选项。
      "48": "/images/icon.png", // 显示在扩展程序管理页面上
      "128": "/images/icon.png" // 在安装和 Chrome Webstore 中显示
    },
    "default_title": "react crx v3",
    "default_popup": "index.html"
  }
  // Only one of 'browser_action', 'page_action', and 'app' can be specified.
  // 浏览器右上角图标设置 browser_action、page_action、app 必须三选一
  // 通过配置 browser_action 可以在浏览器的右上角增加一个图标
  // 一个 browser_action 可以拥有一个图标，一个 tooltip，一个 badge 和一个 popup
  // "browser_action": {
  //   // 图标推荐使用宽高都为 19 像素的图片，更大的图标会被缩小，格式随意，一般推荐 png
  //   // 可以通过 manifest 中 default_icon 字段配置，也可以调用 chrome.browserAction.setIcon() 方法
  //   "default_icon": "images/icon.png",
  //   // 图标悬停时的标题，可选
  //   // 位于浏览器插件栏图标下方 hover 展示
  //   // 修改 browser_action 的 manifest 中 default_title 字段，或者调用 chrome.browserAction.setTitle() 方法
  //   // setTitle() 优先级高于 配置
  //   "default_title": "FE WorkFlows 一款辅助日常开发的小助手",
  //   "default_popup": "pages/popup/popup.html"
  // },
  // 当某些特定页面打开才显示的图标
  // "page_action": {
  //   "default_icon": "images/baiduLogo.png",
  //   "default_title": "我是 pageAction",
  //   "default_popup": "/pages/popup/popup4baidu.html",
  //   "permissions": ["declarativeContent"]
  // },
  // // 插件主页，这个很重要，不要浪费了这个免费广告位
  // "homepage_url": "https://www.baidu.com",
  // // 覆盖浏览器默认页面
  // // 一个扩展只能替代一个页面；
  // // 不能替代隐身窗口的新标签页；
  // // 网页必须设置title，否则用户可能会看到网页的URL，造成困扰；
  // "chrome_url_overrides": {
  //   // 覆盖浏览器默认的新标签页
  //   "newtab": "pages/newtab/newtab.html" // chrome://newtab
  //   // "history": "history.html", // chrome://history
  //   // "bookmarks": "bookmarks.html" // chrome://bookmarks
  // },
  // // Chrome40以前的插件配置页写法
  // "options_page": "pages/options/options.html",
  // // Chrome40以后的插件配置页写法，如果2个都写，新版Chrome只认后面这一个
  // "options_ui": {
  //   "page": "pages/options/options.html",
  //   // 添加一些默认的样式，推荐使用
  //   "chrome_style": true
  // },
  // // 向地址栏注册一个关键字以提供搜索建议，只能设置一个关键字
  // "omnibox": { "keyword": "go" },
  // // 默认语言
  // // "default_locale": "zh_CN",
  // // devtools页面入口，注意只能指向一个HTML文件，不能是JS文件
  // "devtools_page": "pages/devtools/devtools.html",
  // // 新增命令
  // "commands": {
  //   "_execute_browser_action": {
  //     "suggested_key": {
  //       "default": "Ctrl+Shift+F",
  //       "mac": "MacCtrl+Shift+F"
  //     },
  //     "description": "Opens popup.html"
  //   }
  // }
}
